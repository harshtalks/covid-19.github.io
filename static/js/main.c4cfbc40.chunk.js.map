{"version":3,"sources":["GlobalStyles/GlobalStyle.js","GlobalStyles/Container.js","Components/Header/Header.style.js","Components/Header/index.js","Components/Card/Card.style.js","Components/Card/index.js","Components/Cards/Cards.styles.js","Tools/helpers.js","Components/Cards/index.js","Tools/API.js","Components/Loader/Loader.styles.js","Components/Loader/index.js","Components/Home.js","hooks/useWorld.js","Components/GraphCases/GraphCases.style.js","Components/PickBar/index.js","Components/GraphCases/index.js","Components/GraphDeaths/GraphDeaths.styles.js","Components/GraphDeaths/index.js","Components/GraphRec/GraphRec.styles.js","Components/GraphRec/index.js","Components/Graphs.js","hooks/useTotalData.js","Components/CountryCard/CountryCard.styles.js","Components/CountryCard/index.js","Components/CountryWise/CountryWise.styles.js","Components/CountryWise/index.js","hooks/useAllCountries.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","Section","Content","Header","CardDiv","props","color","Card","cardTitle","cardStat","cardChange","img","text","className","src","alt","formatNumbers","number","Intl","NumberFormat","format","findIncremet","numerator","denom","toFixed","Cards","data","caseChanged","todayCases","cases","DeathChanged","todayDeaths","deaths","recoveredChanged","todayRecovered","recovered","activeChanged","active","fetchWorldWide","a","fetch","fetchData","json","fetchResp","console","log","fetchAllCountries","fetchAllCountriesHistory","country","length","Row","Loader","Home","useState","state","setState","error","setError","loading","setLoading","useEffect","dataRecieved","fetchingData","useWorldAPI","PickBar","setSearch","name","setName","value","setvalue","fetchCountries","response","message","placeholder","onChange","e","target","map","el","Math","random","Graph","countries","labels","Object","keys","actualValues","values","essentialJS","useCallback","type","element","ctl","document","getElementById","window","casesChart","Chart","datasets","label","fill","borderColor","backgroundColor","options","responsive","layout","padding","title","display","destroy","id","GraphDeath","deathLabels","deathValues","deathChart","GraphRec","recLabels","recValues","newChart","Graphs","search","setCountries","timeline","useTotalHistory","style","margin","CardComponent","CountryCard","stats","swipeAvail","Wrapper","CountryWise","fetchError","setFetchError","fetchLoad","fetchingCountries","useAllCountries","select","setSelect","setCountry","final","setFinal","toLowerCase","split","word","charAt","toUpperCase","slice","join","functionGetdata","cn","filter","onSubmit","preventDefault","justifyContent","position","width","top","marginLeft","countryInfo","flag","casesPerOneMillion","activePerOneMillion","deathsPerOneMillion","recoveredPerOneMillion","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c4cfbc40.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components'\n\n\nexport const GlobalStyle = createGlobalStyle`\n    \n\n    :root{\n        --card1: #43aa8b;\n        --card2: #4361ee;\n        --card3: #d62828;\n        --card4: #52b788;\n        --textLight: #adb5bd;\n    }\n\n    *{\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    html{\n        font-size: 62.5%;\n    }\n\n    body{\n        font-family: 'Poppins', sans-serif;\n        background: black;\n        color: white;\n    }\n`\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    width: 80%;\n    margin: 0 auto;\n\n    \n`","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n    margin-top: 8rem;\n    padding-top: 5rem;\n`\n\nexport const Content = styled.div`\n\n    display: flex;\n    justify-content: space-between;\n\n    img{\n        width: 50px;\n    }\n    h1{\n        font-size: 3rem;\n        font-weight: 500;\n        margin-bottom: .25em;\n    }\n\n    p{\n        font-size: 1.5rem;\n        font-weight: 600;\n        color: var(--textLight);\n        letter-spacing: .4em;\n        text-transform: uppercase;\n    }\n\n    @media screen and (max-width: 768px){\n        flex-direction: column;\n\n        img{\n            margin: 2em 0;\n        }\n    }\n`","import React from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport { Section, Content} from './Header.style'\n\nconst Header = () => {\n    return (\n        <Container>\n            <Section>\n                <Content>\n                    <div>\n                    <h1>COVID-19 Tracker</h1>\n                    <p>Covid 19 Live Information</p>\n                    </div>\n                   \n                </Content>\n            </Section>\n        </Container>\n    )\n}\n\nexport default Header\n","import styled from \"styled-components\";\n\nexport const CardDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 2em;\n    height: fit-content;\n    width: 100%;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    background: #1c2121;\n    border-radius: 1em;\n\n    .inner{\n        display: flex;\n        justify-content: space-between;\n\n        img{\n            width: 50px;\n        }\n\n    }\n\n    h2{\n        font-size: 4rem;\n        font-weight: 700;\n        margin: .25em 0;\n    }\n\n    p{\n        font-size: 1.5rem;\n        text-transform: uppercase;\n        color: #6f7272;\n        line-height: 2em;\n    }\n\n    span{\n        padding: .2em 1em;\n        margin-right: .25em;\n        width: fit-content;\n        background: ${props => props.color};\n        border-radius: .5em;\n        color: white;\n        \n    }\n    h5{\n        font-size: 2rem;\n        font-weight: 600;\n        text-transform: uppercase;\n        color: var(--textLight);\n    }\n\n    \n\n`","import React from 'react'\nimport { CardDiv } from './Card.style'\n\nconst Card = ({cardTitle, cardStat, cardChange, color , img, text}) => {\n    return (\n        <CardDiv color = {color}>\n            <div className=\"inner\">\n                <div>\n                <h5>{cardTitle}</h5>\n            <h2>{cardStat}</h2>\n            <p> <span>{cardChange}</span> {text}</p>\n            </div>\n            <div>\n                <img src={img} alt = 'icon hospitals'/>\n            </div>\n            </div>\n        </CardDiv>\n    )\n}\n\nexport default Card\n","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n    margin: 4rem 0;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2em;\n\n    @media screen and (max-width: 800px){\n        grid-template-columns: 1fr;\n    }\n`","export const formatNumbers = function(number){\n    return new Intl.NumberFormat('en-US').format(number)\n}\n\nexport const findIncremet =  function(numerator, denom){\n    const final = numerator / (denom - numerator)*100;\n    return `${final.toFixed(2)}%`\n}","import React from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport Card from '../Card'\nimport { Section } from './Cards.styles'\nimport { formatNumbers, findIncremet } from '../../Tools/helpers'\n\nconst Cards = ({data}) => {\n    const caseChanged = findIncremet(data.todayCases, data.cases);\n    const DeathChanged = findIncremet(data.todayDeaths, data.deaths);\n    const recoveredChanged = findIncremet(data.todayRecovered, data.recovered);\n    const activeChanged = findIncremet(data.recovered+data.deaths, data.cases);\n    return (\n        <Container>\n            <Section>\n            <Card cardTitle = \"total cases\" cardStat = {formatNumbers(data.cases)} \n            cardChange = {caseChanged} color = '#e63946'\n            img = {'https://img.icons8.com/color/90/000000/hospital.png'}\n            text = {'Increase from yesterday'}\n            />\n            <Card cardTitle = \"total deaths\" cardStat = {formatNumbers(data.deaths)} \n            cardChange = {DeathChanged}   color = '#2a9d8f'\n            img = \"https://img.icons8.com/metro/52/fa314a/death.png\"\n            text = {'Increase from yesterday'}\n            />\n            <Card cardTitle = \"total recovery\" cardStat = {formatNumbers(data.recovered)} \n            cardChange = {recoveredChanged}  color = '#4361ee'\n            img = \"https://img.icons8.com/color/96/000000/recovery.png\"\n            text = {'Increase from yesterday'}\n            />\n            <Card cardTitle = \"active cases\" cardStat = {formatNumbers(data.active)} \n            cardChange = {activeChanged}  color = '#52b788'\n            img = \"https://img.icons8.com/ios-glyphs/90/fa314a/bed.png\"\n            text = {'Decrease from the beggining'}\n            />\n        </Section>\n        </Container>\n    )\n}\n\nexport default Cards\n","\nconst API_URL_ALL = 'https://disease.sh/v3/covid-19/all'\nconst API_URL_COUNTRIES = 'https://disease.sh/v3/covid-19/countries'\nconst API_URL_HISTORY_ALL = 'https://disease.sh/v3/covid-19/historical'\n\nexport const fetchWorldWide = async function(){\n    try{\n        const fetchData = await fetch(API_URL_ALL);\n        const fetchResp = await fetchData.json();\n\n\n        return fetchResp;\n\n    }catch(err){\n        console.log(err)\n    }\n}\n\n\nexport const fetchAllCountries = async function(){\n    try{\n        const fetchData = await fetch(API_URL_COUNTRIES);\n        const fetchResp = await fetchData.json();\n\n        \n\n        return fetchResp;\n\n    }catch(err){\n        console.log(err)\n    }\n}\n\nexport const fetchAllCountriesHistory = async function(country){\n    try{\n        const fetchData = await fetch(`${API_URL_HISTORY_ALL}/${country.length > 0 ? country : 'all'}?lastdays=all`);\n        const fetchResp = await fetchData.json();\n\n        return fetchResp;\n\n    }catch(err){\n        console.log(err)\n    }\n}","import styled from \"styled-components\";\n\n\n\nexport const Row = styled.div`\n    \n\n   .sonar-wrapper {\n  position: relative;\n  z-index: 0;\n  overflow: hidden;\n  padding: 8rem 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n\n   .sonar-emitter {\n  position: relative;\n  margin: 0 auto;\n  width: 100px;\n  height: 100px;\n  border-radius: 9999px;\n  background-image: linear-gradient(to right, #fa709a 0%, #fee140 100%);\n\n\n.sonar-wave {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  border-radius: 9999px;\n  background-image: linear-gradient(to right, #fa709a 0%, #fee140 100%);\n  opacity: 0;\n  z-index: -1;\n  pointer-events: none;\n}\n.sonar-wave {\n  animation: sonarWave 2s linear infinite;\n\n\n\n\n@keyframes sonarWave {\n  from {\n    opacity: 0.4;\n  }\n  to {\n    transform: scale(4);\n    opacity: 0;\n  }\n}\n}\n}\n}\n\n\n\n\n\n\n\n`","import React from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport { Row } from './Loader.styles'\n\nconst Loader = () => {\n    return (\n        <Container>\n        <Row>\n            <div className=\"sonar-wrapper\">\n              <div className=\"sonar-emitter\">\n                 <div className=\"sonar-wave\"></div>\n              </div>\n            </div>\n       </Row>\n\n        </Container>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport Header from '../Components/Header';\nimport Cards from '../Components/Cards'\nimport { useWorldAPI } from '../hooks/useWorld'\nimport Loader from './Loader';\n\n\n\nconst Home = () => {\n    const {state, error, loading} = useWorldAPI();\n\n    if(loading) return <Loader />\n    if(error) return <div>Sorry, Content is not fetched</div>\n\n    return (\n        <>\n            <Header />\n            <Cards data = {state}/>\n        </>\n    )\n}\n\nexport default Home\n","import { useState, useEffect} from \"react\";\nimport { fetchWorldWide } from \"../Tools/API\";\n\nexport const useWorldAPI = function(){\n\n    const [state, setState] = useState({});\n    const [error, setError]  = useState(false);\n    const [loading, setLoading]  = useState(true);\n\n    //use EFFect api\n\n    useEffect( () => {\n        const fetchingData = async function(){\n            try{\n            \n                setError(false)\n                const dataRecieved = await fetchWorldWide();\n                \n                setState(\n                    {\n                        ...dataRecieved\n                    }\n                )\n\n                setLoading(false)\n\n            }catch(err){\n                setError(true);\n            }\n        }\n\n        fetchingData();\n    },[] )\n\n    return {state, error, loading};\n}","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n    padding: 2em;\n\n    \n   box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    background: #1c2121;\n    div{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: fit-content;\n        \n\n        .textBar{\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            h2{\n        font-size: 3rem;\n        text-transform: uppercase;\n        margin-bottom: .5em;\n        }\n        p{\n            font-size: 1.5em;\n            color: var(--textLight);\n        }\n        }\n\n        \n    \n    select{\n            font-size: 1.5rem;\n            padding: .2em 1em;\n            border-radius: .5em;\n            background-color: transparent;\n            color: white;\n            outline: none;\n        }\n    }\n\n\n\n\n\n    @media (max-width: 768px){\n      div{\n          flex-direction: column;\n      }\n\n     \n    }\n`","import React, { useEffect, useState } from 'react'\n\nconst PickBar = ({setSearch}) => {\n    const [name, setName] = useState([])\n    const [value, setvalue] = useState('')\n\n    useEffect(() => {\n        setSearch(value)\n    },[value,setSearch])\n    \n    const fetchCountries = async function(){\n        try{\n            const fetchingData = await fetch('https://disease.sh/v3/covid-19/apple/countries')\n            const response = await fetchingData.json();\n            \n            setName([...response])\n        }\n        catch(err){\n            console.log(err.message)\n        }\n    }\n\n    useEffect(() => {\n        fetchCountries();\n        \n    },[])\n    return (\n        <select placeholder = \"Country\" value = {value} onChange = {(e) => {\n            setvalue(e.target.value)\n        }}>\n            <option></option>\n            {name.map(el => {\n                return (\n                    <option key= {Math.random()*100000}>{el}</option>\n                )\n            })}\n        </select>\n    )\n}\n\nexport default PickBar\n","import React, {useCallback, useEffect} from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport { Content } from './GraphCases.style'\nimport Chart from 'chart.js/auto';\nimport PickBar from '../PickBar';\n\nconst Graph = ({countries, setSearch}) => {\n\n\n    const labels = Object.keys(countries.cases)\n    const actualValues = Object.values(countries.cases)\n\n    const essentialJS = useCallback(\n        (type,element) => {\n        const ctl = document.getElementById(element)\n        window.casesChart = new Chart(ctl, {\n            type: type,\n            data: {\n                labels: labels,\n                datasets: [\n                    {\n                        data: actualValues,\n                        label: 'Cases so Far',\n                        fill: true,\n                        borderColor: \"#00b4d8\",\n                        backgroundColor: '#48cae4'\n                    }\n                ]\n            },\n            options:{\n                responsive: true,\n                layout: {\n                    padding: 20,\n                    \n                },\n                title: {\n                    display: true,\n                    text: 'World COVID-19 Case Trend'\n                }\n            }\n            \n        })\n        \n    },\n    [labels, actualValues]\n    )\n    \n    useEffect(() => {\n         if(window.casesChart instanceof Chart){\n            window.casesChart.destroy();\n        }\n        essentialJS('line', 'LineChart');\n       \n    },[essentialJS])\n\n    return (\n        <Container>\n            <Content>\n               <div>\n                    <div className = \"textBar\">\n                        <h2>Trend - Cases</h2>\n                        <p>Historical DATA since 22 January. Initially set to world wide data. <br/>\n                        Choose country using the option bar in right side.\n                        </p>\n                    </div>\n                    <PickBar setSearch = {setSearch}/>\n               </div>\n                \n        <canvas id=\"LineChart\"></canvas>\n   \n            </Content>\n            \n        </Container>\n    )\n}\n\nexport default Graph\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n    padding: 2em;\n\n    \n   box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    background: #1c2121;\n    div{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 10vh;\n        h2{\n        font-size: 3rem;\n        text-transform: uppercase;\n    }\n    select{\n            font-size: 1.5rem;\n            padding: .2em 1em;\n            border-radius: .5em;\n            background-color: transparent;\n            color: white;\n            outline: none;\n        }\n    }\n\n\n    @media (max-width: 768px){\n      div{\n          flex-direction: column;\n      }\n    }\n`","import React, {useEffect, useCallback} from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport { Content } from '../GraphDeaths/GraphDeaths.styles'\nimport Chart from 'chart.js/auto';\n\nconst GraphDeath = ({countries, setSearch}) => {\n\n    const deathLabels = Object.keys(countries.deaths)\n    const deathValues = Object.values(countries.deaths)\n\n    const essentialJS = useCallback(\n        (type,element) => {\n        const ctl = document.getElementById(element)\n        window.deathChart = new Chart(ctl, {\n            type: type,\n            data: {\n                labels: deathLabels,\n                datasets: [\n                    {\n                        data: deathValues,\n                        label: 'Deaths so Far',\n                        fill: true,\n                        borderColor: \"#c9184a\",\n                        backgroundColor: '#ff4d6d'\n                    }\n                ]\n            },\n            options:{\n                responsive: true,\n                layout: {\n                    padding: 20,\n                    \n                },\n                title: {\n                    display: true,\n                    text: 'World COVID-19 Death Trend'\n                }\n            }\n            \n        })\n    },\n        [deathLabels,deathValues]\n    )\n    useEffect(() => {\n        if(window.deathChart instanceof Chart){\n            window.deathChart.destroy();\n        }\n        essentialJS('line', 'LineChart-death');\n    },[essentialJS])\n\n\n    return (\n        <Container>\n            <Content>\n               <div>\n                    <h2>Trend - Death</h2>\n                    \n               </div>\n                <canvas id=\"LineChart-death\" ></canvas>\n            </Content>\n            \n        </Container>\n    )\n}\n\nexport default GraphDeath\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n    padding: 2em;\n\n    \n   box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    background: #1c2121;\n    div{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        height: 10vh;\n        h2{\n        font-size: 3rem;\n        text-transform: uppercase;\n    }\n    select{\n            font-size: 1.5rem;\n            padding: .2em 1em;\n            border-radius: .5em;\n            background-color: transparent;\n            color: white;\n            outline: none;\n        }\n    }\n\n\n    @media (max-width: 768px){\n      div{\n          flex-direction: column;\n      }\n    }\n`","import React, {useEffect, useCallback} from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport { Content } from '../GraphRec/GraphRec.styles'\nimport Chart from 'chart.js/auto';\nconst GraphRec = ({countries, setSearch}) => {\n\n    const recLabels = Object.keys(countries.recovered)\n    const recValues = Object.values(countries.recovered)\n\n    const essentialJS = useCallback(\n        (type,element) => {\n        const ctl = document.getElementById(element)\n        window.newChart = new Chart(ctl, {\n            type: type,\n            data: {\n                labels: recLabels,\n                datasets: [\n                    {\n                        data: recValues,\n                        label: 'Recoveries so Far',\n                        fill: true,\n                        borderColor: \"#38b000\",\n                        backgroundColor: '#70e000'\n                    }\n                ]\n            },\n            options:{\n                responsive: true,\n                layout: {\n                    padding: 20,\n                    \n                },\n                title: {\n                    display: true,\n                    text: 'World COVID-19 Recovery Trend'\n                }\n            }\n            \n        })\n        \n    },\n        [recLabels,recValues],\n    )\n    useEffect(() => {\n        if(window.newChart instanceof Chart){\n            window.newChart.destroy();\n        }\n        essentialJS('line', 'LineChart-rec');\n    },[essentialJS])\n    return (\n        <Container>\n            <Content>\n               <div>\n                    <h2>Trend - Recovery</h2>  \n               </div>\n                <canvas id=\"LineChart-rec\" ></canvas>\n            </Content>\n            \n        </Container>\n    )\n}\n\nexport default GraphRec\n","import React  from 'react'\nimport { Container } from '../GlobalStyles/Container';\nimport { useTotalHistory } from '../hooks/useTotalData'\nimport Graph from './GraphCases';\nimport GraphDeath from './GraphDeaths';\nimport GraphRec from './GraphRec';\nimport Loader from './Loader';\n\n\nconst Graphs = () => {\n    const { countries, error, loading,setSearch} = useTotalHistory() \n\n    \n    if(loading) return <Loader />\n    if(error) {return (<Container>\n        <div>NO data Found</div>\n    </Container>)}  \n\n    \n    return (\n       <div>\n       <Graph countries = {countries} setSearch = {setSearch} />\n       <div style = {{\n           margin: '4em' ,\n       }}></div>\n       <GraphDeath countries = {countries} />\n       <div style = {{\n           margin: '4em' ,\n       }}></div>\n       <GraphRec countries = {countries} />\n       </div>\n\n    )\n}\n\nexport default Graphs\n","import { useState, useEffect} from \"react\";\nimport { fetchAllCountriesHistory } from \"../Tools/API\";\n\nexport const useTotalHistory = function(){\n    const [search, setSearch] = useState(\"\")\n    const [countries, setCountries] = useState([]);\n    const [error, setError]  = useState(false);\n    const [loading, setLoading]  = useState(true);\n\n\n\n     const fetchingData = async function(search){\n            try{ \n                setError(false)\n                const dataRecieved = await fetchAllCountriesHistory(search);\n\n               if(search.length > 0){\n                    setCountries(\n                    dataRecieved.timeline\n                )\n               } else{\n                    setCountries(\n                    dataRecieved\n                )\n               }\n\n                setLoading(false)\n\n            }catch(err){\n                setError(true);\n            }\n     }\n\n        useEffect(() => {\n            fetchingData(search);\n        },[search])\n\n    return {countries, error, loading,search, setSearch};\n}","import styled from \"styled-components\";\n\nexport const CardComponent = styled.div`\n\n    width: 100%;\n    height: fit-content;\n    .swipeInfo{\n        text-align: right;\n        color: var(--textLight);\n        visibility: hidden;\n    }\n\n    padding: 2em;\n    border-radius: 1em;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n   background: #0F2027;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to right, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n\n    h4{\n        font-size: 2rem;\n        text-transform: uppercase;\n    }\n\n    h2{\n    font-size: 4rem;\n    }\n\n    @media (max-width: 576px){\n    flex: 0 0  auto;\n    .swipeInfo{\n        visibility: visible;\n    }\n    }\n`\n","import React from 'react'\nimport { CardComponent } from './CountryCard.styles'\n\n\nconst CountryCard = ({title, stats, swipeAvail}) => {\n    return (\n        <CardComponent>\n            <h4>{title}</h4>\n            <h2>{stats}</h2>\n            {\n                \n                <h5 className=\"swipeInfo\">{swipeAvail ? 'Swipe to see more Info' : 'Scroll Down for Trends'}</h5>}\n        </CardComponent>\n    )\n}\n\nexport default CountryCard\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    \n\n    .headerText{\n        margin: 2rem 0;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        h1{\n            font-size: 3rem;\n        }\n\n        input{\n            font-size: 2rem;\n           \n        }\n\n        .btn{\n            background-color: #85FFBD;\nbackground-image: linear-gradient(45deg, #85FFBD 0%, #FFFB7D 100%);\n\n            padding: 0.4em 2em;\n            color: black;\n            border: none;\n            border-radius: 0.25em;\n            cursor: pointer;\n            transition: all .25s ease-in;\n            \n            :hover{\n                background-position: center right;\n                transform: scale(1.1);\n            }\n            \n        }\n\n        .txt{\n            background:#1c2121;\n            color: white;\n            outline: none;\n            border: none;\n            padding: 0.4em 1em;\n            border-radius: .5em;\n            margin-right: .7em;\n        }\n\n        @media screen and (max-width: 768px){\n        flex-direction: column;\n        align-items: flex-start;\n\n        form{\n            margin: 1em 0;\n        }\n\n        .btn{\n            margin-top: 1em;\n        }\n    }\n    }\n\n    \n`\n\nexport const Content = styled.div`\ndisplay: grid;\n    margin: 1em 0;\n    margin-bottom: 4em;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2rem;\n\n    @media (max-width: 576px){\n        display: flex;\n  flex-wrap: nowrap;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n\n  ::-webkit-scrollbar {\n    width: 0;  /* Remove scrollbar space */\n    background: transparent;  /* Optional: just make scrollbar invisible */\n}\n\n\n    }\n    `","import  {useRef,useState ,useEffect}from 'react'\nimport { Container } from '../../GlobalStyles/Container'\nimport { useAllCountries } from '../../hooks/useAllCountries'\nimport CountryCard from '../CountryCard'\nimport { Content } from './CountryWise.styles'\nimport { Wrapper } from './CountryWise.styles'\nimport { formatNumbers } from '../../Tools/helpers'\n\nconst CountryWise = () => {\n    const {state} = useAllCountries()\n    const [select, setSelect] = useState('')\n    const [country, setCountry] = useState([]);\n    const [final,setFinal] = useState(\"\")\n\n    useEffect(() => {\n        if(!select) return \n        else if(select === 'USA' || select === 'usa') setFinal('USA')\n        else if(select === 'UK' || select === 'uk') setFinal('UK')\n        else setFinal(select.toLowerCase()\n        .split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(' '))\n    }, [select])\n\n    const handler = (e) => {\n        e.preventDefault()\n        \n       functionGetdata(final)\n    }\n\n    const functionGetdata = (cn) => {\n     setCountry(state.filter(el => el.country === cn))\n    \n    }\n    return (\n        <Container>\n            <Wrapper>\n           <div className=\"headerText\">\n               <h1>CountryWise Data</h1>\n               <form onSubmit= {handler}>\n                   <input className = \"txt\" type=\"text\"\n                    placeholder = \"Country Name\"\n                    value = {select} onChange = {(e) => setSelect(e.target.value)}\n                    />\n                   <input className=\"btn\" type=\"submit\" placeholder = \"Submit\" \n                   />\n               </form>\n           </div>\n           {\n               !select && \n               <Content style = {{display: 'flex', justifyContent: 'center'}}>\n                   <CountryCard title = 'Please Enter Country Name. Remember It should start with a capital letter'\n                   swipeAvail = {false}\n                   ></CountryCard>\n               </Content>\n           }\n           {\n               select && country.length === 0 &&\n               <Content style = {{display: 'flex', justifyContent: 'center'}}>\n                   <CountryCard title = 'Wrong Country Name, for USA, UK each letter is capital, and countries having two words in their name,capitalize each word.' \n                   swipeAvail = {false}\n                   ></CountryCard>\n               </Content>\n           }\n           {\n               select && (country.length > 0) &&\n               <>\n           <h1\n           style ={{position: 'relative'}}\n           >{select} <img \n           style = {{width: '40px',\n                        position: 'absolute',top : 0, marginLeft: '.4em'}}\n           src={country[0].countryInfo.flag} alt=\"\" /></h1>\n           <Content>    \n            < CountryCard title = 'total cases' \n            stats = {formatNumbers(country[0].cases)}\n            swipeAvail = {true}\n            />\n            < CountryCard title = 'cases per million' \n            stats = {formatNumbers(country[0].casesPerOneMillion)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'total Active cases' \n            stats = {formatNumbers(country[0].active)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'active per million' \n            stats = {formatNumbers(country[0].activePerOneMillion)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'total deaths' \n            stats = {formatNumbers(country[0].deaths)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'deaths per million' \n            stats = {formatNumbers(country[0].deathsPerOneMillion)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'total recovery' \n            stats = {formatNumbers(country[0].recovered)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'recovery per million' \n            stats = {formatNumbers(country[0].recoveredPerOneMillion)} \n            swipeAvail = {true}\n            />\n            < CountryCard title = 'today cases' \n            stats = {formatNumbers(country[0].todayCases)}\n            swipeAvail = {true}\n            />\n            < CountryCard title = 'today deaths' \n            stats = {formatNumbers(country[0].todayDeaths)}\n            swipeAvail = {false}\n            />\n           </Content>\n           \n           \n           </>\n       \n           }\n\n           \n        </Wrapper>\n        </Container>\n    )\n}\n\n\n\n\nexport default CountryWise\n","import React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport { fetchAllCountries } from '../Tools/API';\n\nexport const useAllCountries = () => {\n    const [state, setState] = useState([]);\n    const [fetchError, setFetchError] = useState(false);\n    const [fetchLoad, setFetchLoad] = useState(true)\n\n    useEffect(() => {\n        \n        const fetchingCountries = async function(){\n            try{\n                setFetchError(false);\n                \n                const fetchData = await fetchAllCountries();\n\n                setState(\n                    [...fetchData]\n                )\n\n            }catch(err){\n                console.error(err);\n                setFetchError(true)\n            }\n            \n\n        }\n\n        fetchingCountries();\n    },[])\n\n    return {state, fetchError, fetchLoad};\n}\n\n","import { GlobalStyle } from './GlobalStyles/GlobalStyle';\nimport './App.css';\nimport Home from './Components/Home';\nimport Graphs from './Components/Graphs';\nimport CountryWise from './Components/CountryWise';\n\nfunction App() {\n  return (\n    <>\n    <Home />\n    <CountryWise />\n    <Graphs />\n    <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}